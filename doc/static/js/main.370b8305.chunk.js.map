{"version":3,"sources":["form/var.js","form/InputText.jsx","function/inputReducer.js","form/Form.js","hook/useInputs.js","App.js","index.js"],"names":["clases","InputText","name","label","parseInput","type","useState","val","ok","undefined","value","setValue","ref","useRef","useEffect","chageClase","validated","payload","test","length","div","split","inputReducer","current","classList","add","remove","className","htmlFor","id","onFocus","onBlur","onChange","target","Form","values","setValues","inputOk","setInputOk","data","setData","inputs","inputAllOk","includes","getData","map","dat","parseObject","input","arr","index","findIndex","obj","useInputs","onSubmit","event","preventDefault","console","log","disabled","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.370b8305.chunk.js","sourcesContent":["export const clases = {\r\n    inputCotainer: 'input-container',\r\n    inputOk: 'input-ok',\r\n    inputWrong: 'input-wrong',\r\n    labelUp:'label-up'\r\n}","import React, { useEffect, useRef, useState } from 'react'\r\nimport { inputReducer } from '../function/inputReducer';\r\nimport { clases } from './var';\r\n\r\nexport const InputText = ({ name, label, parseInput, type }) => {\r\n    const [value, setValue] = useState({ val: '', ok: undefined });\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        parseInput({\r\n            name,\r\n            value: value.val,\r\n            ok: value.ok\r\n        })\r\n        chageClase(ref,value.ok);\r\n    }, [value])\r\n\r\n\r\n    const focusClasses = () => {\r\n        ref.current.classList.add(clases.labelUp)\r\n    }\r\n\r\n\r\n    const blurClasses = () => {\r\n        if (!value.val)\r\n            ref.current.classList.remove(clases.labelUp)\r\n\r\n    }\r\n\r\n    const hadelChange = ({ target: { value } }) => {\r\n        setValue({ val: value, ok: validated(value) })\r\n\r\n    }\r\n\r\n    const validated = (value) => {\r\n        if (inputReducer(type, value))\r\n            return true;\r\n        else\r\n            return false\r\n    }\r\n\r\n    const chageClase = (ref, ok) => {\r\n        if(ok === undefined)\r\n            return\r\n        if (ok) {\r\n            ref.current.classList.add(clases.inputOk)\r\n            ref.current.classList.remove(clases.inputWrong)\r\n        }\r\n        else {\r\n            ref.current.classList.remove(clases.inputOk)\r\n            ref.current.classList.add(clases.inputWrong)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={clases.inputCotainer} ref={ref}>\r\n\r\n\r\n            <label htmlFor={name}>{label}</label>\r\n\r\n\r\n            <input\r\n                type={type}\r\n                value={value.val}\r\n                name={name}\r\n                id={name}\r\n                onFocus={focusClasses}\r\n                onBlur={blurClasses}\r\n                onChange={hadelChange}\r\n            />\r\n            {\r\n                value.ok ? <i className=\"fa fa-check ik\"></i> : <i className=\"fa fa-times iw\"></i>\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const inputReducer = (type, payload) => {\r\n    switch (type) {\r\n        //Evalua que el dato tenga mas de 2 caracteres\r\n        case 'text':\r\n            // console.log(payload)\r\n            if (!/\\d/g.test(payload) && payload.length > 1)\r\n                return true;\r\n            return false\r\n        case 'email':\r\n            let div = payload.split('@');\r\n            if (div && div.length === 2 && div[1].length > 1)\r\n                return true;\r\n\r\n            return false;\r\n        case 'password':\r\n            if (/\\d/g.test(payload) && /[a-z]/g.test(payload) && /[A-Z]/g.test(payload))\r\n                return true;\r\n            return false\r\n        case 'number':\r\n            if (/\\d/g.test(payload) && !/[a-z]/g.test(payload) && !/[A-Z]/g.test(payload))\r\n                return true;\r\n            return false\r\n        default:\r\n            return false\r\n    }\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useInputs } from '../hook/useInputs'\r\n// import { InputPassword } from './InputPassword'\r\nimport { InputText } from './InputText'\r\n\r\nexport const Form = () => {\r\n    const {data, parseInput, inputOk} = useInputs();\r\n    const hadleSubmit = (event)=>{\r\n        event.preventDefault();\r\n        console.log(data)\r\n    }\r\n\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={hadleSubmit}>\r\n            <InputText name=\"name\" label=\"Ingrese su nombre\" parseInput={parseInput} type=\"text\"/>\r\n            <InputText name=\"lastname\" label=\"Ingrese su apelllido\" parseInput={parseInput} type=\"text\"/>\r\n            {/* <InputText name=\"phone\" label=\"Ingrese su telefono\" parseInput={parseInput} type=\"number\"/> */}\r\n            <InputText name=\"email\" label=\"Ingrese su email\" parseInput={parseInput} type=\"email\"/>\r\n            <InputText name=\"password\" label=\"Ingrese su contraseña\" parseInput={parseInput} type=\"password\"/>\r\n            {/* <InputPassword name=\"password\" label=\"Ingrese su contraseña\" message='Contraseña debe tener Mayuculas, minuscular y numeros' parseInput={parseInput} /> */}\r\n            <button  type={'submit'} disabled={!inputOk}>Registrarse</button>\r\n        </form>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nexport const useInputs = () => {\r\n    const [values, setValues] = useState([]);\r\n    const [inputOk, setInputOk] = useState([]);;\r\n    const [data, setData] = useState({});\r\n\r\n    useEffect(() => {\r\n        let inputs = inputAllOk();\r\n        if (inputs.includes(false) || inputs.includes(undefined))\r\n            setInputOk(false)\r\n        else\r\n            setInputOk(true)\r\n            getData();\r\n    }, [values])\r\n\r\n    const parseInput = (input) => {\r\n        let arr = [...values];\r\n        let index = arr.findIndex(obj => obj.name === input.name);\r\n        if (index >= 0) {\r\n            arr[index] = input;\r\n            setValues(arr);\r\n        } else {\r\n            setValues((val) => [...val, input])\r\n        }\r\n    }\r\n\r\n    const inputAllOk = () => values.map(value => value.ok);\r\n    const getData = () => values.map(({name, value}) =>setData((dat)=>parseObject(dat, name, value)))\r\n    const parseObject = (data, name, value) =>{\r\n        return {...data, [name]:value};\r\n    }\r\n\r\n\r\n\r\n    return { data, parseInput, inputOk }\r\n}\r\n","import { Form } from \"./form/Form\";\n\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles.scss';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}